#!/usr/bin/env bash

set -e
set -o pipefail

# Stolen from asdf-kubectl: https://github.com/asdf-community/asdf-kubectl/blob/master/bin/install

ASDF_INSTALL_TYPE=${ASDF_INSTALL_TYPE:-version  }
[ -n "$ASDF_INSTALL_VERSION" ] || (>&2 echo 'Missing ASDF_INSTALL_VERSION' && exit 1)
[ -n "$ASDF_INSTALL_PATH" ] || (>&2 echo 'Missing ASDF_INSTALL_PATH' && exit 1)

install_kpack() {
  local install_type=$1
  local version=$2
  local install_path=$3
  local bin_install_path="$install_path/bin"
  local download_url="$(get_download_url $version)"
  mkdir -p "${bin_install_path}"

  local bin_path="${bin_install_path}/kpack"
  echo "[*] Downloading kpack-cli from ${download_url}"
  if curl -L -sf "$download_url" -o "$bin_path"; then
    chmod +x $bin_path
    echo "[*] kpack-cli has been installed. Use 'kpack' to get started"
  else
    echo "Failed to download kpack-cli from ${download_url}. Does the version exist and is available in the requested $(get_cpu) architecture?"
    exit 1
  fi
}

get_arch() {
  uname | tr '[:upper:]' '[:lower:]'
}

get_cpu() {
  local machine_hardware_name
  machine_hardware_name=${ASDF_KPACKCLI_OVERWRITE_ARCH:-"$(uname -m)"}

  case "$machine_hardware_name" in
    'x86_64') local cpu_type="amd64";;
    'aarch64') local cpu_type="arm64";;
    *) local cpu_type="$machine_hardware_name";;
  esac
  
  echo "$cpu_type"

}

get_download_url() {
  local version="$1"
  local platform="$(get_arch)"
  echo "https://github.com/vmware-tanzu/kpack-cli/releases/download/v${version}/kp-${platform}-$(get_cpu)-${version}"
}

install_kpack $ASDF_INSTALL_TYPE $ASDF_INSTALL_VERSION $ASDF_INSTALL_PATH
